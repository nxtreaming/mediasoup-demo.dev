diff --git a/broadcasters/ffmpeg.sh b/broadcasters/ffmpeg.sh
index 243132e..88ba622 100755
--- a/broadcasters/ffmpeg.sh
+++ b/broadcasters/ffmpeg.sh
@@ -63,7 +63,7 @@ fi
 set -e
 
 BROADCASTER_ID=$(LC_CTYPE=C tr -dc A-Za-z0-9 < /dev/urandom | fold -w ${1:-32} | head -n 1)
-HTTPIE_COMMAND="http --check-status"
+HTTPIE_COMMAND="http --verify=no --check-status"
 AUDIO_SSRC=1111
 AUDIO_PT=100
 VIDEO_SSRC=2222
@@ -113,6 +113,8 @@ res=$(${HTTPIE_COMMAND} \
 	rtcpMux:=false \
 	2> /dev/null)
 
+echo "obsrtc.com: debug-1@ ${res}"
+
 #
 # Parse JSON response into Shell variables and extract the PlainTransport id,
 # IP, port and RTCP port.
@@ -133,6 +135,8 @@ res=$(${HTTPIE_COMMAND} \
 	rtcpMux:=false \
 	2> /dev/null)
 
+echo "obsrtc.com: debug-2@ ${res}"
+
 #
 # Parse JSON response into Shell variables and extract the PlainTransport id,
 # IP, port and RTCP port.
@@ -157,11 +161,17 @@ ${HTTPIE_COMMAND} -v \
 #
 echo ">>> creating mediasoup video Producer..."
 
+#${HTTPIE_COMMAND} -v \
+#	POST ${SERVER_URL}/rooms/${ROOM_ID}/broadcasters/${BROADCASTER_ID}/transports/${videoTransportId}/producers \
+#	kind="video" \
+#	rtpParameters:="{ \"codecs\": [{ \"mimeType\":\"video/h264\", \"payloadType\":${VIDEO_PT}, \"clockRate\":90000 }], \"encodings\": [{ \"ssrc\":${VIDEO_SSRC} }] }" \
+#	> /dev/null
+
 ${HTTPIE_COMMAND} -v \
 	POST ${SERVER_URL}/rooms/${ROOM_ID}/broadcasters/${BROADCASTER_ID}/transports/${videoTransportId}/producers \
 	kind="video" \
-	rtpParameters:="{ \"codecs\": [{ \"mimeType\":\"video/vp8\", \"payloadType\":${VIDEO_PT}, \"clockRate\":90000 }], \"encodings\": [{ \"ssrc\":${VIDEO_SSRC} }] }" \
-	> /dev/null
+	rtpParameters:="{ \"codecs\": [{ \"mimeType\":\"video/h264\", \"payloadType\":${VIDEO_PT}, \"clockRate\":90000, \"parameters\":{ \"packetization-mode\":1, \"profile-level-id\":\"4d0032\", \"level-asymmetry-allowed\":1, \"x-google-start-bitrate\":1000 } }], \"encodings\": [{ \"ssrc\":${VIDEO_SSRC} }] }" \
+    > /dev/null
 
 #
 # Run ffmpeg command and make it send audio and video RTP with codec payload and
@@ -176,6 +186,18 @@ echo ">>> running ffmpeg..."
 # - We can add ?pkt_size=1200 to each rtp:// URI to limit the max packet size
 #   to 1200 bytes.
 #
+#ffmpeg \
+#	-re \
+#	-v info \
+#	-stream_loop -1 \
+#	-i ${MEDIA_FILE} \
+#	-map 0:a:0 \
+#	-acodec libopus -ab 128k -ac 2 -ar 48000 \
+#	-map 0:v:0 \
+#	-pix_fmt yuv420p -c:v libvpx -b:v 1000k -deadline realtime -cpu-used 4 \
+#	-f tee \
+#	"[select=a:f=rtp:ssrc=${AUDIO_SSRC}:payload_type=${AUDIO_PT}]rtp://${audioTransportIp}:${audioTransportPort}?rtcpport=${audioTransportRtcpPort}|[select=v:f=rtp:ssrc=${VIDEO_SSRC}:payload_type=${VIDEO_PT}]rtp://${videoTransportIp}:${videoTransportPort}?rtcpport=${videoTransportRtcpPort}"
+
 ffmpeg \
 	-re \
 	-v info \
@@ -184,6 +206,6 @@ ffmpeg \
 	-map 0:a:0 \
 	-acodec libopus -ab 128k -ac 2 -ar 48000 \
 	-map 0:v:0 \
-	-pix_fmt yuv420p -c:v libvpx -b:v 1000k -deadline realtime -cpu-used 4 \
+	-pix_fmt yuv420p -s 640x480 -c:v libx264 -profile:v main -x264opts 'scenecut=0:nal-hrd=cbr:force-cfr=1:bframes=0' -b:v 1000k -minrate:v 1000K -maxrate:v 1000K -bufsize:v 600K\
 	-f tee \
 	"[select=a:f=rtp:ssrc=${AUDIO_SSRC}:payload_type=${AUDIO_PT}]rtp://${audioTransportIp}:${audioTransportPort}?rtcpport=${audioTransportRtcpPort}|[select=v:f=rtp:ssrc=${VIDEO_SSRC}:payload_type=${VIDEO_PT}]rtp://${videoTransportIp}:${videoTransportPort}?rtcpport=${videoTransportRtcpPort}"
